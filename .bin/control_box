#!/usr/bin/env zsh

case "$1" in
    -bspres)
        bspc wm -r &
        ;;
    -ewwopen)
        eww daemon
        eww open taskbar
        ;;
    -ewwclose)
        eww kill
        bspc config top_padding 0
        ;;
    -ewwhalt)
        eww close-all
        ;;
    -ewwreload)
        if [[ $(pidof eww) ]]; then
            control_box -ewwhalt
            control_box -ewwopen
            dunstify -r 888 "EWW" "Taskbar has been reloaded"
        else
            dunstify -u critical -r 888 "EWW" "Taskbar is not running"
        fi
        ;;
    -polybres)
        poly-reset
        ;;
    -kbres)
        keeb-reset
        ;;
    -soundres)
        systemctl --user restart pipewire.service pipewire-pulse.socket && control_box -ewwreload
        ;;
    -wclass)
        dunstify -i window_list "Find Window Class" "$(xprop WM_CLASS | tr -d '\n' | xclip -sel c -f)"
        ;;
    -wallres)
        nitrogen --set-zoom-fill --save --random Pictures/Wallpapers
        ;;
    -record)
        record() {
            ffmpeg \
                -f x11grab \
                -framerate 60 \
                -probesize 42M \
                -s "1920x1080" \
                -i :0 \
                -f lavfi -i anullsrc=channel_layout=stereo:sample_rate=44100 \
                -vf setpts=N/FR/TB \
                -c:v libx264rgb -preset ultrafast -q:v 1 \
                -threads 4 \
                /tmp/Recordings/"$(date +%Y%m%d_%H%M%S)".mp4
        }
        record
        ;;
    -monitor)
        report(){
            if [[ ! $(pidof gnome-system-monitor) ]]; then
                dunstify -C 999
                gnome-system-monitor &
            else
                node_focus=($(bspc query --desktop focused.focused --nodes))
                seq ${#node_focus} | while read -r index; do
                    node_id=$(print "${node_focus[$index]}")
                    if [[ $(ps -p $(xdo pid $node_id) -o cmd | awk '(NR==2)') == "gnome-system-monitor" ]]; then
                        bspc node $node_id -c
                        dunstify -r 999 -t 5000 -u critical "Gnome System Monitor" "Closed Gnome System Monitor"
                        exit
                    fi
                done
                node_total=($(bspc query --desktop '.!focused' --nodes))
                seq ${#node_total} | while read -r index; do
                    node_id=$(print "${node_total[$index]}")
                    if [[ $(ps -p $(xdo pid $node_id) -o cmd | awk '(NR==2)') == "gnome-system-monitor" ]]; then
                        bspc node $node_id --to-desktop focused.focused
                    fi
                done
            fi
        }

        report
        ;;
    -pavu_toggle)
        report(){
            if [[ ! $(pidof pavucontrol) ]]; then
                dunstify -C 999
                pavucontrol &
            else
                node_focus=($(bspc query --desktop focused.focused --nodes))
                seq ${#node_focus} | while read -r index; do
                    node_id=$(print "${node_focus[$index]}")
                    if [[ $(ps -p $(xdo pid $node_id) -o cmd | awk '(NR==2)') == "pavucontrol" ]]; then
                        bspc node $node_id -c
                        dunstify -r 999 -t 5000 -u critical "Pavucontrol" "Closed Pavucontrol"
                        exit
                    fi
                done
                node_total=($(bspc query --desktop '.!focused' --nodes))
                seq ${#node_total} | while read -r index; do
                    node_id=$(print "${node_total[$index]}")
                    if [[ $(ps -p $(xdo pid $node_id) -o cmd | awk '(NR==2)') == "pavucontrol" ]]; then
                        bspc node $node_id --to-desktop focused.focused
                    fi
                done
            fi
        }

        report
        ;;
esac
